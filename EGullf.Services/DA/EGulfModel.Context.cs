//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EGullf.Services.DA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EGULFEntities : DbContext
    {
        public EGULFEntities()
            : base("name=EGULFEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SystemVariable> SystemVariable { get; set; }
        public virtual DbSet<EmailTemplate> EmailTemplate { get; set; }
        public virtual DbSet<CustomTemplate> CustomTemplate { get; set; }
        public virtual DbSet<CustomTemplateSection> CustomTemplateSection { get; set; }
        public virtual DbSet<ClasificationSociety> ClasificationSociety { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<ProjectType> ProjectType { get; set; }
        public virtual DbSet<VesselType> VesselType { get; set; }
        public virtual DbSet<Port> Port { get; set; }
        public virtual DbSet<Region> Region { get; set; }
        public virtual DbSet<RegionCoordinates> RegionCoordinates { get; set; }
        public virtual DbSet<ReasonAvailability> ReasonAvailability { get; set; }
    
        public virtual ObjectResult<sp_getCustomTemplateSections_Result> sp_getCustomTemplateSections(Nullable<int> customTemplateId, string templateName)
        {
            var customTemplateIdParameter = customTemplateId.HasValue ?
                new ObjectParameter("CustomTemplateId", customTemplateId) :
                new ObjectParameter("CustomTemplateId", typeof(int));
    
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCustomTemplateSections_Result>("sp_getCustomTemplateSections", customTemplateIdParameter, templateNameParameter);
        }
    
        public virtual ObjectResult<sp_insUpdUser_Result> sp_insUpdUser(ObjectParameter userId, string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insUpdUser_Result>("sp_insUpdUser", userId, userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<st_SelPagNotification_Result> st_SelPagNotification(Nullable<int> notificationId, Nullable<int> type, Nullable<System.DateTime> date, string description, Nullable<int> status, Nullable<int> sourceId, Nullable<int> initialRow, Nullable<int> rowsRetrieve, string sortColumn, string sortDir)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var sourceIdParameter = sourceId.HasValue ?
                new ObjectParameter("SourceId", sourceId) :
                new ObjectParameter("SourceId", typeof(int));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_SelPagNotification_Result>("st_SelPagNotification", notificationIdParameter, typeParameter, dateParameter, descriptionParameter, statusParameter, sourceIdParameter, initialRowParameter, rowsRetrieveParameter, sortColumnParameter, sortDirParameter);
        }
    
        public virtual ObjectResult<sp_SelPagNotification_Result> sp_SelPagNotification(Nullable<int> notificationId, Nullable<int> type, Nullable<System.DateTime> date, string description, Nullable<int> status, Nullable<int> sourceId, Nullable<int> initialRow, Nullable<int> rowsRetrieve, string sortColumn, string sortDir)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var sourceIdParameter = sourceId.HasValue ?
                new ObjectParameter("SourceId", sourceId) :
                new ObjectParameter("SourceId", typeof(int));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelPagNotification_Result>("sp_SelPagNotification", notificationIdParameter, typeParameter, dateParameter, descriptionParameter, statusParameter, sourceIdParameter, initialRowParameter, rowsRetrieveParameter, sortColumnParameter, sortDirParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdNotification_Result> sp_InsUpdNotification(ObjectParameter notificationId, Nullable<int> type, Nullable<System.DateTime> date, string description, Nullable<int> status, Nullable<int> sourceId)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var sourceIdParameter = sourceId.HasValue ?
                new ObjectParameter("SourceId", sourceId) :
                new ObjectParameter("SourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdNotification_Result>("sp_InsUpdNotification", notificationId, typeParameter, dateParameter, descriptionParameter, statusParameter, sourceIdParameter);
        }
    
        public virtual int sp_valEmail(ObjectParameter personId, string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_valEmail", personId, emailParameter);
        }
    
        public virtual ObjectResult<sp_insUpdPerson_Result> sp_insUpdPerson(ObjectParameter personId, string firstName, string lastName, Nullable<int> userId, string phoneNumber, string email, string skype, Nullable<int> fileReferenceId, Nullable<int> companyId)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var skypeParameter = skype != null ?
                new ObjectParameter("Skype", skype) :
                new ObjectParameter("Skype", typeof(string));
    
            var fileReferenceIdParameter = fileReferenceId.HasValue ?
                new ObjectParameter("FileReferenceId", fileReferenceId) :
                new ObjectParameter("FileReferenceId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insUpdPerson_Result>("sp_insUpdPerson", personId, firstNameParameter, lastNameParameter, userIdParameter, phoneNumberParameter, emailParameter, skypeParameter, fileReferenceIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdFileReference_Result> sp_InsUpdFileReference(ObjectParameter fileReferenceId, string fileName, string path, string contentType)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var contentTypeParameter = contentType != null ?
                new ObjectParameter("ContentType", contentType) :
                new ObjectParameter("ContentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdFileReference_Result>("sp_InsUpdFileReference", fileReferenceId, fileNameParameter, pathParameter, contentTypeParameter);
        }
    
        public virtual ObjectResult<sp_SelFileByReference_Result> sp_SelFileByReference(string reference)
        {
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelFileByReference_Result>("sp_SelFileByReference", referenceParameter);
        }
    
        public virtual ObjectResult<sp_SelPagCompany_Result> sp_SelPagCompany(Nullable<int> companyId, string companyName, string rFC, string address, string phoneNumber, string email, Nullable<int> initialRow, Nullable<int> rowsRetrieve, string sortColumn, string sortDir)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelPagCompany_Result>("sp_SelPagCompany", companyIdParameter, companyNameParameter, rFCParameter, addressParameter, phoneNumberParameter, emailParameter, initialRowParameter, rowsRetrieveParameter, sortColumnParameter, sortDirParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdAlert_Result> sp_InsUpdAlert(ObjectParameter alertId, Nullable<int> alertTemplateId, Nullable<int> from, Nullable<int> to, string subject, string body, string url, string extra, Nullable<int> status, Nullable<System.DateTime> createdAt, Nullable<System.DateTime> updatedAt)
        {
            var alertTemplateIdParameter = alertTemplateId.HasValue ?
                new ObjectParameter("AlertTemplateId", alertTemplateId) :
                new ObjectParameter("AlertTemplateId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(int));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var extraParameter = extra != null ?
                new ObjectParameter("Extra", extra) :
                new ObjectParameter("Extra", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdAtParameter = createdAt.HasValue ?
                new ObjectParameter("CreatedAt", createdAt) :
                new ObjectParameter("CreatedAt", typeof(System.DateTime));
    
            var updatedAtParameter = updatedAt.HasValue ?
                new ObjectParameter("UpdatedAt", updatedAt) :
                new ObjectParameter("UpdatedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdAlert_Result>("sp_InsUpdAlert", alertId, alertTemplateIdParameter, fromParameter, toParameter, subjectParameter, bodyParameter, urlParameter, extraParameter, statusParameter, createdAtParameter, updatedAtParameter);
        }
    
        public virtual ObjectResult<sp_SelPagAlert_Result> sp_SelPagAlert(Nullable<int> alertId, Nullable<int> alertTemplateId, Nullable<int> from, Nullable<int> to, string subject, string body, Nullable<int> status, Nullable<int> initialRow, Nullable<int> rowsRetrieve, string sortColumn, string sortDir)
        {
            var alertIdParameter = alertId.HasValue ?
                new ObjectParameter("AlertId", alertId) :
                new ObjectParameter("AlertId", typeof(int));
    
            var alertTemplateIdParameter = alertTemplateId.HasValue ?
                new ObjectParameter("AlertTemplateId", alertTemplateId) :
                new ObjectParameter("AlertTemplateId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(int));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelPagAlert_Result>("sp_SelPagAlert", alertIdParameter, alertTemplateIdParameter, fromParameter, toParameter, subjectParameter, bodyParameter, statusParameter, initialRowParameter, rowsRetrieveParameter, sortColumnParameter, sortDirParameter);
        }
    
        public virtual ObjectResult<sp_SelAlertTemplateById_Result> sp_SelAlertTemplateById(Nullable<int> alertTemplateId)
        {
            var alertTemplateIdParameter = alertTemplateId.HasValue ?
                new ObjectParameter("AlertTemplateId", alertTemplateId) :
                new ObjectParameter("AlertTemplateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelAlertTemplateById_Result>("sp_SelAlertTemplateById", alertTemplateIdParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdCompany_Result> sp_InsUpdCompany(ObjectParameter companyId, string companyName, string rFC, string address, string phoneNumber, string email)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdCompany_Result>("sp_InsUpdCompany", companyId, companyNameParameter, rFCParameter, addressParameter, phoneNumberParameter, emailParameter);
        }
    
        public virtual ObjectResult<sp_SelCompany_Result> sp_SelCompany(Nullable<int> companyId, string companyName, string rFC, string address, string phoneNumber, string email)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelCompany_Result>("sp_SelCompany", companyIdParameter, companyNameParameter, rFCParameter, addressParameter, phoneNumberParameter, emailParameter);
        }
    
        public virtual ObjectResult<sp_DelFileByReference_Result> sp_DelFileByReference(string reference)
        {
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DelFileByReference_Result>("sp_DelFileByReference", referenceParameter);
        }
    
        public virtual int sp_DelPersonFileReference(Nullable<int> personId, Nullable<int> userId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelPersonFileReference", personIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_delCompanyPerson_Result> sp_delCompanyPerson(Nullable<int> companyId, Nullable<int> personId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_delCompanyPerson_Result>("sp_delCompanyPerson", companyIdParameter, personIdParameter);
        }
    
        public virtual ObjectResult<sp_SelRoleByUser_Result> sp_SelRoleByUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelRoleByUser_Result>("sp_SelRoleByUser", userIdParameter);
        }
    
        public virtual ObjectResult<sp_ValVessel_Result> sp_ValVessel(Nullable<int> vesselId, string name, string iMO)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iMOParameter = iMO != null ?
                new ObjectParameter("IMO", iMO) :
                new ObjectParameter("IMO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ValVessel_Result>("sp_ValVessel", vesselIdParameter, nameParameter, iMOParameter);
        }
    
        public virtual ObjectResult<sp_SelSuitability_Result> sp_SelSuitability(Nullable<int> vesselId)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelSuitability_Result>("sp_SelSuitability", vesselIdParameter);
        }
    
        public virtual ObjectResult<sp_SelVesselSpecificInfo_Result> sp_SelVesselSpecificInfo(Nullable<int> vesselId)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelVesselSpecificInfo_Result>("sp_SelVesselSpecificInfo", vesselIdParameter);
        }
    
        public virtual ObjectResult<sp_delCompanyInvitationPerson_Result> sp_delCompanyInvitationPerson(Nullable<int> companyInvitationId, Nullable<int> personId)
        {
            var companyInvitationIdParameter = companyInvitationId.HasValue ?
                new ObjectParameter("CompanyInvitationId", companyInvitationId) :
                new ObjectParameter("CompanyInvitationId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_delCompanyInvitationPerson_Result>("sp_delCompanyInvitationPerson", companyInvitationIdParameter, personIdParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdCompanyInvitation_Result> sp_InsUpdCompanyInvitation(ObjectParameter companyInvitationId, Nullable<int> companyId, Nullable<int> from, Nullable<int> to, Nullable<System.DateTime> createtAt, Nullable<int> status, string email)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(int));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(int));
    
            var createtAtParameter = createtAt.HasValue ?
                new ObjectParameter("CreatetAt", createtAt) :
                new ObjectParameter("CreatetAt", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdCompanyInvitation_Result>("sp_InsUpdCompanyInvitation", companyInvitationId, companyIdParameter, fromParameter, toParameter, createtAtParameter, statusParameter, emailParameter);
        }
    
        public virtual ObjectResult<sp_SelInvitationsByCompanyId_Result> sp_SelInvitationsByCompanyId(Nullable<int> companyId, string email, Nullable<int> initialRow, Nullable<int> rowsRetrieve, string sortColumn, string sortDir)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelInvitationsByCompanyId_Result>("sp_SelInvitationsByCompanyId", companyIdParameter, emailParameter, initialRowParameter, rowsRetrieveParameter, sortColumnParameter, sortDirParameter);
        }
    
        public virtual ObjectResult<sp_delCompanyInvitation_Result> sp_delCompanyInvitation(Nullable<int> companyInvitationId)
        {
            var companyInvitationIdParameter = companyInvitationId.HasValue ?
                new ObjectParameter("CompanyInvitationId", companyInvitationId) :
                new ObjectParameter("CompanyInvitationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_delCompanyInvitation_Result>("sp_delCompanyInvitation", companyInvitationIdParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdVesselSpecificInfo_Result> sp_InsUpdVesselSpecificInfo(Nullable<int> vesselId, Nullable<decimal> grossTonnage, Nullable<decimal> netTonnage, Nullable<decimal> beamOverall, Nullable<decimal> lengthOverall, Nullable<decimal> maximumLoadedDraft, Nullable<decimal> freeDeckArea, Nullable<decimal> deckStrenght, Nullable<decimal> freshWaterCapacity, Nullable<decimal> fuelOilCapacity, Nullable<decimal> ballastWaterCapacity, Nullable<decimal> mudCapacity, Nullable<decimal> cementTanksCapacity, Nullable<decimal> oilRecoveryCapacity, Nullable<decimal> waterMarkerPlant, Nullable<decimal> hotWaterCalorifier, Nullable<decimal> sewageTreatmentPlant, Nullable<decimal> cruisingSpeed, Nullable<decimal> maximumSpeed, Nullable<decimal> distanceCruisingSpeed, Nullable<decimal> distanceMaxSpeed, Nullable<decimal> fuelConsumptionCruisingSpeed, Nullable<decimal> fuelConsumptionMaxSpeed, Nullable<int> dynamicPositionSystem, Nullable<int> updatedBy)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            var grossTonnageParameter = grossTonnage.HasValue ?
                new ObjectParameter("GrossTonnage", grossTonnage) :
                new ObjectParameter("GrossTonnage", typeof(decimal));
    
            var netTonnageParameter = netTonnage.HasValue ?
                new ObjectParameter("NetTonnage", netTonnage) :
                new ObjectParameter("NetTonnage", typeof(decimal));
    
            var beamOverallParameter = beamOverall.HasValue ?
                new ObjectParameter("BeamOverall", beamOverall) :
                new ObjectParameter("BeamOverall", typeof(decimal));
    
            var lengthOverallParameter = lengthOverall.HasValue ?
                new ObjectParameter("LengthOverall", lengthOverall) :
                new ObjectParameter("LengthOverall", typeof(decimal));
    
            var maximumLoadedDraftParameter = maximumLoadedDraft.HasValue ?
                new ObjectParameter("MaximumLoadedDraft", maximumLoadedDraft) :
                new ObjectParameter("MaximumLoadedDraft", typeof(decimal));
    
            var freeDeckAreaParameter = freeDeckArea.HasValue ?
                new ObjectParameter("FreeDeckArea", freeDeckArea) :
                new ObjectParameter("FreeDeckArea", typeof(decimal));
    
            var deckStrenghtParameter = deckStrenght.HasValue ?
                new ObjectParameter("DeckStrenght", deckStrenght) :
                new ObjectParameter("DeckStrenght", typeof(decimal));
    
            var freshWaterCapacityParameter = freshWaterCapacity.HasValue ?
                new ObjectParameter("FreshWaterCapacity", freshWaterCapacity) :
                new ObjectParameter("FreshWaterCapacity", typeof(decimal));
    
            var fuelOilCapacityParameter = fuelOilCapacity.HasValue ?
                new ObjectParameter("FuelOilCapacity", fuelOilCapacity) :
                new ObjectParameter("FuelOilCapacity", typeof(decimal));
    
            var ballastWaterCapacityParameter = ballastWaterCapacity.HasValue ?
                new ObjectParameter("BallastWaterCapacity", ballastWaterCapacity) :
                new ObjectParameter("BallastWaterCapacity", typeof(decimal));
    
            var mudCapacityParameter = mudCapacity.HasValue ?
                new ObjectParameter("MudCapacity", mudCapacity) :
                new ObjectParameter("MudCapacity", typeof(decimal));
    
            var cementTanksCapacityParameter = cementTanksCapacity.HasValue ?
                new ObjectParameter("CementTanksCapacity", cementTanksCapacity) :
                new ObjectParameter("CementTanksCapacity", typeof(decimal));
    
            var oilRecoveryCapacityParameter = oilRecoveryCapacity.HasValue ?
                new ObjectParameter("OilRecoveryCapacity", oilRecoveryCapacity) :
                new ObjectParameter("OilRecoveryCapacity", typeof(decimal));
    
            var waterMarkerPlantParameter = waterMarkerPlant.HasValue ?
                new ObjectParameter("WaterMarkerPlant", waterMarkerPlant) :
                new ObjectParameter("WaterMarkerPlant", typeof(decimal));
    
            var hotWaterCalorifierParameter = hotWaterCalorifier.HasValue ?
                new ObjectParameter("HotWaterCalorifier", hotWaterCalorifier) :
                new ObjectParameter("HotWaterCalorifier", typeof(decimal));
    
            var sewageTreatmentPlantParameter = sewageTreatmentPlant.HasValue ?
                new ObjectParameter("SewageTreatmentPlant", sewageTreatmentPlant) :
                new ObjectParameter("SewageTreatmentPlant", typeof(decimal));
    
            var cruisingSpeedParameter = cruisingSpeed.HasValue ?
                new ObjectParameter("CruisingSpeed", cruisingSpeed) :
                new ObjectParameter("CruisingSpeed", typeof(decimal));
    
            var maximumSpeedParameter = maximumSpeed.HasValue ?
                new ObjectParameter("MaximumSpeed", maximumSpeed) :
                new ObjectParameter("MaximumSpeed", typeof(decimal));
    
            var distanceCruisingSpeedParameter = distanceCruisingSpeed.HasValue ?
                new ObjectParameter("DistanceCruisingSpeed", distanceCruisingSpeed) :
                new ObjectParameter("DistanceCruisingSpeed", typeof(decimal));
    
            var distanceMaxSpeedParameter = distanceMaxSpeed.HasValue ?
                new ObjectParameter("DistanceMaxSpeed", distanceMaxSpeed) :
                new ObjectParameter("DistanceMaxSpeed", typeof(decimal));
    
            var fuelConsumptionCruisingSpeedParameter = fuelConsumptionCruisingSpeed.HasValue ?
                new ObjectParameter("FuelConsumptionCruisingSpeed", fuelConsumptionCruisingSpeed) :
                new ObjectParameter("FuelConsumptionCruisingSpeed", typeof(decimal));
    
            var fuelConsumptionMaxSpeedParameter = fuelConsumptionMaxSpeed.HasValue ?
                new ObjectParameter("FuelConsumptionMaxSpeed", fuelConsumptionMaxSpeed) :
                new ObjectParameter("FuelConsumptionMaxSpeed", typeof(decimal));
    
            var dynamicPositionSystemParameter = dynamicPositionSystem.HasValue ?
                new ObjectParameter("DynamicPositionSystem", dynamicPositionSystem) :
                new ObjectParameter("DynamicPositionSystem", typeof(int));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdVesselSpecificInfo_Result>("sp_InsUpdVesselSpecificInfo", vesselIdParameter, grossTonnageParameter, netTonnageParameter, beamOverallParameter, lengthOverallParameter, maximumLoadedDraftParameter, freeDeckAreaParameter, deckStrenghtParameter, freshWaterCapacityParameter, fuelOilCapacityParameter, ballastWaterCapacityParameter, mudCapacityParameter, cementTanksCapacityParameter, oilRecoveryCapacityParameter, waterMarkerPlantParameter, hotWaterCalorifierParameter, sewageTreatmentPlantParameter, cruisingSpeedParameter, maximumSpeedParameter, distanceCruisingSpeedParameter, distanceMaxSpeedParameter, fuelConsumptionCruisingSpeedParameter, fuelConsumptionMaxSpeedParameter, dynamicPositionSystemParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<sp_SelVesselCost_Result> sp_SelVesselCost(Nullable<int> vesselId)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelVesselCost_Result>("sp_SelVesselCost", vesselIdParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdVesselCost_Result> sp_InsUpdVesselCost(Nullable<int> vesselId, Nullable<decimal> lodgingCost, Nullable<decimal> mealCost, Nullable<decimal> laundryCost, Nullable<decimal> dailyRateTowing, Nullable<decimal> dailyRatePersonnelTransportation, Nullable<decimal> dailyRateMaterialTransportation, Nullable<decimal> dailyRateFlotel, Nullable<int> updatedBy)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            var lodgingCostParameter = lodgingCost.HasValue ?
                new ObjectParameter("LodgingCost", lodgingCost) :
                new ObjectParameter("LodgingCost", typeof(decimal));
    
            var mealCostParameter = mealCost.HasValue ?
                new ObjectParameter("MealCost", mealCost) :
                new ObjectParameter("MealCost", typeof(decimal));
    
            var laundryCostParameter = laundryCost.HasValue ?
                new ObjectParameter("LaundryCost", laundryCost) :
                new ObjectParameter("LaundryCost", typeof(decimal));
    
            var dailyRateTowingParameter = dailyRateTowing.HasValue ?
                new ObjectParameter("DailyRateTowing", dailyRateTowing) :
                new ObjectParameter("DailyRateTowing", typeof(decimal));
    
            var dailyRatePersonnelTransportationParameter = dailyRatePersonnelTransportation.HasValue ?
                new ObjectParameter("DailyRatePersonnelTransportation", dailyRatePersonnelTransportation) :
                new ObjectParameter("DailyRatePersonnelTransportation", typeof(decimal));
    
            var dailyRateMaterialTransportationParameter = dailyRateMaterialTransportation.HasValue ?
                new ObjectParameter("DailyRateMaterialTransportation", dailyRateMaterialTransportation) :
                new ObjectParameter("DailyRateMaterialTransportation", typeof(decimal));
    
            var dailyRateFlotelParameter = dailyRateFlotel.HasValue ?
                new ObjectParameter("DailyRateFlotel", dailyRateFlotel) :
                new ObjectParameter("DailyRateFlotel", typeof(decimal));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdVesselCost_Result>("sp_InsUpdVesselCost", vesselIdParameter, lodgingCostParameter, mealCostParameter, laundryCostParameter, dailyRateTowingParameter, dailyRatePersonnelTransportationParameter, dailyRateMaterialTransportationParameter, dailyRateFlotelParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdCabinSpecification_Result> sp_InsUpdCabinSpecification(ObjectParameter cabinSpecificationId, Nullable<int> referenceId, Nullable<int> cabinType, Nullable<int> cabinQuantity, Nullable<int> type)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var cabinTypeParameter = cabinType.HasValue ?
                new ObjectParameter("CabinType", cabinType) :
                new ObjectParameter("CabinType", typeof(int));
    
            var cabinQuantityParameter = cabinQuantity.HasValue ?
                new ObjectParameter("CabinQuantity", cabinQuantity) :
                new ObjectParameter("CabinQuantity", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdCabinSpecification_Result>("sp_InsUpdCabinSpecification", cabinSpecificationId, referenceIdParameter, cabinTypeParameter, cabinQuantityParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdVessel_Result> sp_InsUpdVessel(ObjectParameter vesselId, string name, string iMO, Nullable<int> countryId, Nullable<int> yearBuild, Nullable<int> clasificationSocietyId, string classNotation, Nullable<System.DateTime> classValidity, Nullable<int> vesselTypeId, Nullable<int> portId, Nullable<int> fileReferenceId, Nullable<int> status, Nullable<decimal> lat, Nullable<decimal> lng, string suitabilityIds, Nullable<int> userModifiedId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iMOParameter = iMO != null ?
                new ObjectParameter("IMO", iMO) :
                new ObjectParameter("IMO", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var yearBuildParameter = yearBuild.HasValue ?
                new ObjectParameter("YearBuild", yearBuild) :
                new ObjectParameter("YearBuild", typeof(int));
    
            var clasificationSocietyIdParameter = clasificationSocietyId.HasValue ?
                new ObjectParameter("ClasificationSocietyId", clasificationSocietyId) :
                new ObjectParameter("ClasificationSocietyId", typeof(int));
    
            var classNotationParameter = classNotation != null ?
                new ObjectParameter("ClassNotation", classNotation) :
                new ObjectParameter("ClassNotation", typeof(string));
    
            var classValidityParameter = classValidity.HasValue ?
                new ObjectParameter("ClassValidity", classValidity) :
                new ObjectParameter("ClassValidity", typeof(System.DateTime));
    
            var vesselTypeIdParameter = vesselTypeId.HasValue ?
                new ObjectParameter("VesselTypeId", vesselTypeId) :
                new ObjectParameter("VesselTypeId", typeof(int));
    
            var portIdParameter = portId.HasValue ?
                new ObjectParameter("PortId", portId) :
                new ObjectParameter("PortId", typeof(int));
    
            var fileReferenceIdParameter = fileReferenceId.HasValue ?
                new ObjectParameter("FileReferenceId", fileReferenceId) :
                new ObjectParameter("FileReferenceId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(decimal));
    
            var lngParameter = lng.HasValue ?
                new ObjectParameter("Lng", lng) :
                new ObjectParameter("Lng", typeof(decimal));
    
            var suitabilityIdsParameter = suitabilityIds != null ?
                new ObjectParameter("SuitabilityIds", suitabilityIds) :
                new ObjectParameter("SuitabilityIds", typeof(string));
    
            var userModifiedIdParameter = userModifiedId.HasValue ?
                new ObjectParameter("UserModifiedId", userModifiedId) :
                new ObjectParameter("UserModifiedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdVessel_Result>("sp_InsUpdVessel", vesselId, nameParameter, iMOParameter, countryIdParameter, yearBuildParameter, clasificationSocietyIdParameter, classNotationParameter, classValidityParameter, vesselTypeIdParameter, portIdParameter, fileReferenceIdParameter, statusParameter, latParameter, lngParameter, suitabilityIdsParameter, userModifiedIdParameter);
        }
    
        public virtual ObjectResult<sp_SelCabinSpecification_Result> sp_SelCabinSpecification(Nullable<int> referenceId, Nullable<int> type)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelCabinSpecification_Result>("sp_SelCabinSpecification", referenceIdParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdProject_Result> sp_InsUpdProject(ObjectParameter projectId, Nullable<int> projectTypeId, Nullable<System.DateTime> startDate, Nullable<int> duration, Nullable<int> extension, Nullable<int> regionId, Nullable<int> budget, Nullable<decimal> maxRateBudget, Nullable<decimal> freeDeckArea, Nullable<decimal> mudCapacity, Nullable<decimal> cementTankCapacity, Nullable<decimal> oilRecoveryCapacity, Nullable<int> dynamicPositionSystem, Nullable<decimal> lat, Nullable<decimal> lng, Nullable<int> companyId, Nullable<int> status, string username)
        {
            var projectTypeIdParameter = projectTypeId.HasValue ?
                new ObjectParameter("ProjectTypeId", projectTypeId) :
                new ObjectParameter("ProjectTypeId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var extensionParameter = extension.HasValue ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var budgetParameter = budget.HasValue ?
                new ObjectParameter("Budget", budget) :
                new ObjectParameter("Budget", typeof(int));
    
            var maxRateBudgetParameter = maxRateBudget.HasValue ?
                new ObjectParameter("MaxRateBudget", maxRateBudget) :
                new ObjectParameter("MaxRateBudget", typeof(decimal));
    
            var freeDeckAreaParameter = freeDeckArea.HasValue ?
                new ObjectParameter("FreeDeckArea", freeDeckArea) :
                new ObjectParameter("FreeDeckArea", typeof(decimal));
    
            var mudCapacityParameter = mudCapacity.HasValue ?
                new ObjectParameter("MudCapacity", mudCapacity) :
                new ObjectParameter("MudCapacity", typeof(decimal));
    
            var cementTankCapacityParameter = cementTankCapacity.HasValue ?
                new ObjectParameter("CementTankCapacity", cementTankCapacity) :
                new ObjectParameter("CementTankCapacity", typeof(decimal));
    
            var oilRecoveryCapacityParameter = oilRecoveryCapacity.HasValue ?
                new ObjectParameter("OilRecoveryCapacity", oilRecoveryCapacity) :
                new ObjectParameter("OilRecoveryCapacity", typeof(decimal));
    
            var dynamicPositionSystemParameter = dynamicPositionSystem.HasValue ?
                new ObjectParameter("DynamicPositionSystem", dynamicPositionSystem) :
                new ObjectParameter("DynamicPositionSystem", typeof(int));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(decimal));
    
            var lngParameter = lng.HasValue ?
                new ObjectParameter("Lng", lng) :
                new ObjectParameter("Lng", typeof(decimal));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdProject_Result>("sp_InsUpdProject", projectId, projectTypeIdParameter, startDateParameter, durationParameter, extensionParameter, regionIdParameter, budgetParameter, maxRateBudgetParameter, freeDeckAreaParameter, mudCapacityParameter, cementTankCapacityParameter, oilRecoveryCapacityParameter, dynamicPositionSystemParameter, latParameter, lngParameter, companyIdParameter, statusParameter, usernameParameter);
        }
    
        public virtual ObjectResult<sp_DelProject_Result> sp_DelProject(Nullable<int> projectId, string cancelationComments)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var cancelationCommentsParameter = cancelationComments != null ?
                new ObjectParameter("CancelationComments", cancelationComments) :
                new ObjectParameter("CancelationComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DelProject_Result>("sp_DelProject", projectIdParameter, cancelationCommentsParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdSpecificInfo_Result> sp_InsUpdSpecificInfo(ObjectParameter matchableId, Nullable<decimal> bHP, Nullable<int> subtypeId, Nullable<decimal> bollardPullAhead, Nullable<decimal> bollardPullAstern, Nullable<int> numberPassenger, Nullable<bool> airCondition, Nullable<bool> messRoom, Nullable<bool> controlRoom, Nullable<bool> conferenceRoom, Nullable<bool> gym, Nullable<bool> pool, Nullable<bool> office, Nullable<bool> hospital, Nullable<decimal> cargoCapacity, Nullable<decimal> pumpRates, Nullable<int> type, Nullable<decimal> bollardPull, Nullable<decimal> tankCapacity, Nullable<decimal> dischargeRate, Nullable<bool> pemexCheck, Nullable<decimal> deckStrenght)
        {
            var bHPParameter = bHP.HasValue ?
                new ObjectParameter("BHP", bHP) :
                new ObjectParameter("BHP", typeof(decimal));
    
            var subtypeIdParameter = subtypeId.HasValue ?
                new ObjectParameter("SubtypeId", subtypeId) :
                new ObjectParameter("SubtypeId", typeof(int));
    
            var bollardPullAheadParameter = bollardPullAhead.HasValue ?
                new ObjectParameter("BollardPullAhead", bollardPullAhead) :
                new ObjectParameter("BollardPullAhead", typeof(decimal));
    
            var bollardPullAsternParameter = bollardPullAstern.HasValue ?
                new ObjectParameter("BollardPullAstern", bollardPullAstern) :
                new ObjectParameter("BollardPullAstern", typeof(decimal));
    
            var numberPassengerParameter = numberPassenger.HasValue ?
                new ObjectParameter("NumberPassenger", numberPassenger) :
                new ObjectParameter("NumberPassenger", typeof(int));
    
            var airConditionParameter = airCondition.HasValue ?
                new ObjectParameter("AirCondition", airCondition) :
                new ObjectParameter("AirCondition", typeof(bool));
    
            var messRoomParameter = messRoom.HasValue ?
                new ObjectParameter("MessRoom", messRoom) :
                new ObjectParameter("MessRoom", typeof(bool));
    
            var controlRoomParameter = controlRoom.HasValue ?
                new ObjectParameter("ControlRoom", controlRoom) :
                new ObjectParameter("ControlRoom", typeof(bool));
    
            var conferenceRoomParameter = conferenceRoom.HasValue ?
                new ObjectParameter("ConferenceRoom", conferenceRoom) :
                new ObjectParameter("ConferenceRoom", typeof(bool));
    
            var gymParameter = gym.HasValue ?
                new ObjectParameter("Gym", gym) :
                new ObjectParameter("Gym", typeof(bool));
    
            var poolParameter = pool.HasValue ?
                new ObjectParameter("Pool", pool) :
                new ObjectParameter("Pool", typeof(bool));
    
            var officeParameter = office.HasValue ?
                new ObjectParameter("Office", office) :
                new ObjectParameter("Office", typeof(bool));
    
            var hospitalParameter = hospital.HasValue ?
                new ObjectParameter("Hospital", hospital) :
                new ObjectParameter("Hospital", typeof(bool));
    
            var cargoCapacityParameter = cargoCapacity.HasValue ?
                new ObjectParameter("CargoCapacity", cargoCapacity) :
                new ObjectParameter("CargoCapacity", typeof(decimal));
    
            var pumpRatesParameter = pumpRates.HasValue ?
                new ObjectParameter("PumpRates", pumpRates) :
                new ObjectParameter("PumpRates", typeof(decimal));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var bollardPullParameter = bollardPull.HasValue ?
                new ObjectParameter("BollardPull", bollardPull) :
                new ObjectParameter("BollardPull", typeof(decimal));
    
            var tankCapacityParameter = tankCapacity.HasValue ?
                new ObjectParameter("TankCapacity", tankCapacity) :
                new ObjectParameter("TankCapacity", typeof(decimal));
    
            var dischargeRateParameter = dischargeRate.HasValue ?
                new ObjectParameter("DischargeRate", dischargeRate) :
                new ObjectParameter("DischargeRate", typeof(decimal));
    
            var pemexCheckParameter = pemexCheck.HasValue ?
                new ObjectParameter("PemexCheck", pemexCheck) :
                new ObjectParameter("PemexCheck", typeof(bool));
    
            var deckStrenghtParameter = deckStrenght.HasValue ?
                new ObjectParameter("DeckStrenght", deckStrenght) :
                new ObjectParameter("DeckStrenght", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdSpecificInfo_Result>("sp_InsUpdSpecificInfo", matchableId, bHPParameter, subtypeIdParameter, bollardPullAheadParameter, bollardPullAsternParameter, numberPassengerParameter, airConditionParameter, messRoomParameter, controlRoomParameter, conferenceRoomParameter, gymParameter, poolParameter, officeParameter, hospitalParameter, cargoCapacityParameter, pumpRatesParameter, typeParameter, bollardPullParameter, tankCapacityParameter, dischargeRateParameter, pemexCheckParameter, deckStrenghtParameter);
        }
    
        public virtual ObjectResult<sp_SelProject_Result> sp_SelProject(Nullable<int> companyId, Nullable<int> projectId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelProject_Result>("sp_SelProject", companyIdParameter, projectIdParameter);
        }
    
        public virtual ObjectResult<sp_SelAvailabilityVesselById_Result> sp_SelAvailabilityVesselById(Nullable<int> availabilityVesselId, Nullable<int> vesselId)
        {
            var availabilityVesselIdParameter = availabilityVesselId.HasValue ?
                new ObjectParameter("AvailabilityVesselId", availabilityVesselId) :
                new ObjectParameter("AvailabilityVesselId", typeof(int));
    
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelAvailabilityVesselById_Result>("sp_SelAvailabilityVesselById", availabilityVesselIdParameter, vesselIdParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdAvailabilityVessel_Result> sp_InsUpdAvailabilityVessel(ObjectParameter availabilityVesselId, Nullable<int> vesselId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> reasonId, string reasonDescription)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(int));
    
            var reasonDescriptionParameter = reasonDescription != null ?
                new ObjectParameter("ReasonDescription", reasonDescription) :
                new ObjectParameter("ReasonDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdAvailabilityVessel_Result>("sp_InsUpdAvailabilityVessel", availabilityVesselId, vesselIdParameter, startDateParameter, endDateParameter, reasonIdParameter, reasonDescriptionParameter);
        }
    
        public virtual ObjectResult<sp_DelAvailabilityVessel_Result> sp_DelAvailabilityVessel(Nullable<int> availabilityVesselId)
        {
            var availabilityVesselIdParameter = availabilityVesselId.HasValue ?
                new ObjectParameter("AvailabilityVesselId", availabilityVesselId) :
                new ObjectParameter("AvailabilityVesselId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DelAvailabilityVessel_Result>("sp_DelAvailabilityVessel", availabilityVesselIdParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdOfferCost_Result> sp_InsUpdOfferCost(ObjectParameter offerCostId, Nullable<int> offerId, Nullable<decimal> dailyRate)
        {
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            var dailyRateParameter = dailyRate.HasValue ?
                new ObjectParameter("DailyRate", dailyRate) :
                new ObjectParameter("DailyRate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdOfferCost_Result>("sp_InsUpdOfferCost", offerCostId, offerIdParameter, dailyRateParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdOffer_Result> sp_InsUpdOffer(ObjectParameter offerId, Nullable<int> vesselId, Nullable<int> projectId, Nullable<int> status, Nullable<int> vesselOwnerId, Nullable<int> projectOwnerId, Nullable<int> offerReferenceId, string comment, Nullable<int> userModifiedId)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var vesselOwnerIdParameter = vesselOwnerId.HasValue ?
                new ObjectParameter("VesselOwnerId", vesselOwnerId) :
                new ObjectParameter("VesselOwnerId", typeof(int));
    
            var projectOwnerIdParameter = projectOwnerId.HasValue ?
                new ObjectParameter("ProjectOwnerId", projectOwnerId) :
                new ObjectParameter("ProjectOwnerId", typeof(int));
    
            var offerReferenceIdParameter = offerReferenceId.HasValue ?
                new ObjectParameter("OfferReferenceId", offerReferenceId) :
                new ObjectParameter("OfferReferenceId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var userModifiedIdParameter = userModifiedId.HasValue ?
                new ObjectParameter("UserModifiedId", userModifiedId) :
                new ObjectParameter("UserModifiedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdOffer_Result>("sp_InsUpdOffer", offerId, vesselIdParameter, projectIdParameter, statusParameter, vesselOwnerIdParameter, projectOwnerIdParameter, offerReferenceIdParameter, commentParameter, userModifiedIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ValAvailabilityVessel(Nullable<int> vesselId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ValAvailabilityVessel", vesselIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_selUserPerson_Result> sp_selUserPerson(Nullable<int> personId, Nullable<int> userId, string userName, string email, Nullable<int> companyId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selUserPerson_Result>("sp_selUserPerson", personIdParameter, userIdParameter, userNameParameter, emailParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<sp_SelOffer_Result> sp_SelOffer(Nullable<int> offerId, Nullable<int> vesselId, Nullable<int> projectId)
        {
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelOffer_Result>("sp_SelOffer", offerIdParameter, vesselIdParameter, projectIdParameter);
        }
    
        public virtual ObjectResult<sp_RptAgreement_Result> sp_RptAgreement(Nullable<int> offerId, Nullable<int> userType)
        {
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptAgreement_Result>("sp_RptAgreement", offerIdParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<sp_SelPagMessage_Result> sp_SelPagMessage(Nullable<int> messageId, Nullable<int> referenceId, Nullable<int> from, Nullable<int> to, Nullable<int> status, Nullable<int> initialRow, Nullable<int> rowsRetrieve)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(int));
    
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(int));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelPagMessage_Result>("sp_SelPagMessage", messageIdParameter, referenceIdParameter, fromParameter, toParameter, statusParameter, initialRowParameter, rowsRetrieveParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdFinishProject_Result> sp_InsUpdFinishProject(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdFinishProject_Result>("sp_InsUpdFinishProject", projectIdParameter);
        }
    
        public virtual ObjectResult<sp_SelPagProject_Result> sp_SelPagProject(Nullable<int> companyId, Nullable<int> projectId, Nullable<int> projectTypeId, Nullable<System.DateTime> startDate, Nullable<int> regionId, Nullable<int> status, Nullable<int> initialRow, Nullable<int> rowsRetrieve, string sortColumn, string sortDirection)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var projectTypeIdParameter = projectTypeId.HasValue ?
                new ObjectParameter("ProjectTypeId", projectTypeId) :
                new ObjectParameter("ProjectTypeId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelPagProject_Result>("sp_SelPagProject", companyIdParameter, projectIdParameter, projectTypeIdParameter, startDateParameter, regionIdParameter, statusParameter, initialRowParameter, rowsRetrieveParameter, sortColumnParameter, sortDirectionParameter);
        }
    
        public virtual ObjectResult<sp_InsUpdMessage_Result> sp_InsUpdMessage(ObjectParameter messageId, Nullable<int> referenceId, Nullable<int> from, Nullable<int> to, ObjectParameter status, string message, ObjectParameter createdAt)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(int));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsUpdMessage_Result>("sp_InsUpdMessage", messageId, referenceIdParameter, fromParameter, toParameter, status, messageParameter, createdAt);
        }
    
        public virtual ObjectResult<sp_SelPagOffer_Result> sp_SelPagOffer(Nullable<int> userId, Nullable<int> companyId, Nullable<int> offerReceived, Nullable<int> status, Nullable<int> initialRow, Nullable<int> rowsRetrieve, string sortColumn, string sortDirection)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var offerReceivedParameter = offerReceived.HasValue ?
                new ObjectParameter("OfferReceived", offerReceived) :
                new ObjectParameter("OfferReceived", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelPagOffer_Result>("sp_SelPagOffer", userIdParameter, companyIdParameter, offerReceivedParameter, statusParameter, initialRowParameter, rowsRetrieveParameter, sortColumnParameter, sortDirectionParameter);
        }
    
        public virtual ObjectResult<sp_SelProjectSuitability_Result> sp_SelProjectSuitability(Nullable<int> companyId, Nullable<int> projectId, Nullable<int> projectTypeId, Nullable<bool> pemexCheck, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> regionId, Nullable<int> dynamicPositionSystem, Nullable<decimal> dailyMaxRate, Nullable<int> subtypeId, Nullable<decimal> bollardPull, Nullable<decimal> bollardPullAhead, Nullable<decimal> bollardPullAstern, Nullable<int> numberPassengers, Nullable<decimal> cargoCapacity)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var projectTypeIdParameter = projectTypeId.HasValue ?
                new ObjectParameter("ProjectTypeId", projectTypeId) :
                new ObjectParameter("ProjectTypeId", typeof(int));
    
            var pemexCheckParameter = pemexCheck.HasValue ?
                new ObjectParameter("PemexCheck", pemexCheck) :
                new ObjectParameter("PemexCheck", typeof(bool));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var dynamicPositionSystemParameter = dynamicPositionSystem.HasValue ?
                new ObjectParameter("DynamicPositionSystem", dynamicPositionSystem) :
                new ObjectParameter("DynamicPositionSystem", typeof(int));
    
            var dailyMaxRateParameter = dailyMaxRate.HasValue ?
                new ObjectParameter("DailyMaxRate", dailyMaxRate) :
                new ObjectParameter("DailyMaxRate", typeof(decimal));
    
            var subtypeIdParameter = subtypeId.HasValue ?
                new ObjectParameter("SubtypeId", subtypeId) :
                new ObjectParameter("SubtypeId", typeof(int));
    
            var bollardPullParameter = bollardPull.HasValue ?
                new ObjectParameter("BollardPull", bollardPull) :
                new ObjectParameter("BollardPull", typeof(decimal));
    
            var bollardPullAheadParameter = bollardPullAhead.HasValue ?
                new ObjectParameter("BollardPullAhead", bollardPullAhead) :
                new ObjectParameter("BollardPullAhead", typeof(decimal));
    
            var bollardPullAsternParameter = bollardPullAstern.HasValue ?
                new ObjectParameter("BollardPullAstern", bollardPullAstern) :
                new ObjectParameter("BollardPullAstern", typeof(decimal));
    
            var numberPassengersParameter = numberPassengers.HasValue ?
                new ObjectParameter("NumberPassengers", numberPassengers) :
                new ObjectParameter("NumberPassengers", typeof(int));
    
            var cargoCapacityParameter = cargoCapacity.HasValue ?
                new ObjectParameter("CargoCapacity", cargoCapacity) :
                new ObjectParameter("CargoCapacity", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelProjectSuitability_Result>("sp_SelProjectSuitability", companyIdParameter, projectIdParameter, projectTypeIdParameter, pemexCheckParameter, startDateParameter, endDateParameter, regionIdParameter, dynamicPositionSystemParameter, dailyMaxRateParameter, subtypeIdParameter, bollardPullParameter, bollardPullAheadParameter, bollardPullAsternParameter, numberPassengersParameter, cargoCapacityParameter);
        }
    
        public virtual ObjectResult<sp_UpdOfferCancelOthers_Result> sp_UpdOfferCancelOthers(Nullable<int> offerId)
        {
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpdOfferCancelOthers_Result>("sp_UpdOfferCancelOthers", offerIdParameter);
        }
    
        public virtual ObjectResult<sp_UpdMessageAsReaded_Result> sp_UpdMessageAsReaded(Nullable<int> referenceId, Nullable<int> personId)
        {
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpdMessageAsReaded_Result>("sp_UpdMessageAsReaded", referenceIdParameter, personIdParameter);
        }
    
        public virtual ObjectResult<sp_SelVesselMatchedAvailable_Result> sp_SelVesselMatchedAvailable(Nullable<int> companyId, Nullable<int> projectId, Nullable<int> offerId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelVesselMatchedAvailable_Result>("sp_SelVesselMatchedAvailable", companyIdParameter, projectIdParameter, offerIdParameter);
        }
    
        public virtual ObjectResult<sp_SelSpecificInfo_Result> sp_SelSpecificInfo(Nullable<int> matchableId, Nullable<int> type)
        {
            var matchableIdParameter = matchableId.HasValue ?
                new ObjectParameter("MatchableId", matchableId) :
                new ObjectParameter("MatchableId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelSpecificInfo_Result>("sp_SelSpecificInfo", matchableIdParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_SelPagVessel_Result> sp_SelPagVessel(Nullable<int> vesselId, Nullable<int> status, string name, string iMO, Nullable<int> companyId, Nullable<decimal> lat, Nullable<decimal> lng, Nullable<int> initialRow, Nullable<int> rowsRetrieve, string sortColumn, string sortDir)
        {
            var vesselIdParameter = vesselId.HasValue ?
                new ObjectParameter("VesselId", vesselId) :
                new ObjectParameter("VesselId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iMOParameter = iMO != null ?
                new ObjectParameter("IMO", iMO) :
                new ObjectParameter("IMO", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(decimal));
    
            var lngParameter = lng.HasValue ?
                new ObjectParameter("Lng", lng) :
                new ObjectParameter("Lng", typeof(decimal));
    
            var initialRowParameter = initialRow.HasValue ?
                new ObjectParameter("InitialRow", initialRow) :
                new ObjectParameter("InitialRow", typeof(int));
    
            var rowsRetrieveParameter = rowsRetrieve.HasValue ?
                new ObjectParameter("RowsRetrieve", rowsRetrieve) :
                new ObjectParameter("RowsRetrieve", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelPagVessel_Result>("sp_SelPagVessel", vesselIdParameter, statusParameter, nameParameter, iMOParameter, companyIdParameter, latParameter, lngParameter, initialRowParameter, rowsRetrieveParameter, sortColumnParameter, sortDirParameter);
        }
    
        public virtual ObjectResult<sp_UpdStatus_Result> sp_UpdStatus(Nullable<int> projectId, Nullable<int> statusId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpdStatus_Result>("sp_UpdStatus", projectIdParameter, statusIdParameter);
        }
    }
}
